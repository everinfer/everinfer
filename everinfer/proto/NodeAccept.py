# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class NodeAccept(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = NodeAccept()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsNodeAccept(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # NodeAccept
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # NodeAccept
    def Endpoint(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def NodeAcceptStart(builder): builder.StartObject(1)
def Start(builder):
    return NodeAcceptStart(builder)
def NodeAcceptAddEndpoint(builder, endpoint): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(endpoint), 0)
def AddEndpoint(builder, endpoint):
    return NodeAcceptAddEndpoint(builder, endpoint)
def NodeAcceptEnd(builder): return builder.EndObject()
def End(builder):
    return NodeAcceptEnd(builder)